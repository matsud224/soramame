#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS = -std=c++11 -Wall -fexceptions
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = 

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -std=c++11 -Wall -pg -g -DUSE_GLUT
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS) -pg -lglut -lGLU -lGL -pthread
OBJDIR_DEBUG = .objs
DEP_DEBUG = 
OUT_DEBUG = ./soramame

INC_DEBUG_PARSER_ = $(INC)
CFLAGS_DEBUG_PARSER_ = $(CFLAGS) -std=c++11 -Wall -g -DPARSER_DEBUG
RESINC_DEBUG_PARSER_ = $(RESINC)
RCFLAGS_DEBUG_PARSER_ = $(RCFLAGS)
LIBDIR_DEBUG_PARSER_ = $(LIBDIR)
LIB_DEBUG_PARSER_ = $(LIB)
LDFLAGS_DEBUG_PARSER_ = $(LDFLAGS) -lglut -lGLU -lGL -pthread
OBJDIR_DEBUG_PARSER_ = .objs
DEP_DEBUG_PARSER_ = 
OUT_DEBUG_PARSER_ = ./soramame

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2 -std=c++11 -Wextra
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -lglut -lGLU -lGL -pthread
OBJDIR_RELEASE = .objs
DEP_RELEASE = 
OUT_RELEASE = ./soramame

INC_RELEASE_GLUT_ = $(INC)
CFLAGS_RELEASE_GLUT_ = $(CFLAGS) -O2 -std=c++11 -Wextra -DUSE_GLUT
RESINC_RELEASE_GLUT_ = $(RESINC)
RCFLAGS_RELEASE_GLUT_ = $(RCFLAGS)
LIBDIR_RELEASE_GLUT_ = $(LIBDIR)
LIB_RELEASE_GLUT_ = $(LIB)
LDFLAGS_RELEASE_GLUT_ = $(LDFLAGS) -lglut -lGLU -lGL -pthread
OBJDIR_RELEASE_GLUT_ = .objs
DEP_RELEASE_GLUT_ = 
OUT_RELEASE_GLUT_ = ./soramame

OBJ_DEBUG = $(OBJDIR_DEBUG)/vm.cpp.o $(OBJDIR_DEBUG)/utility.cpp.o $(OBJDIR_DEBUG)/type.cpp.o $(OBJDIR_DEBUG)/statement.cpp.o $(OBJDIR_DEBUG)/parser_actions.cpp.o $(OBJDIR_DEBUG)/parser.cpp.o $(OBJDIR_DEBUG)/main.cpp.o $(OBJDIR_DEBUG)/ast_etc.cpp.o $(OBJDIR_DEBUG)/lexer.cpp.o $(OBJDIR_DEBUG)/expression.cpp.o $(OBJDIR_DEBUG)/compiler.cpp.o $(OBJDIR_DEBUG)/builtinfunctions.cpp.o

OBJ_DEBUG_PARSER_ = $(OBJDIR_DEBUG_PARSER_)/vm.cpp.o $(OBJDIR_DEBUG_PARSER_)/utility.cpp.o $(OBJDIR_DEBUG_PARSER_)/type.cpp.o $(OBJDIR_DEBUG_PARSER_)/statement.cpp.o $(OBJDIR_DEBUG_PARSER_)/parser_actions.cpp.o $(OBJDIR_DEBUG_PARSER_)/parser.cpp.o $(OBJDIR_DEBUG_PARSER_)/main.cpp.o $(OBJDIR_DEBUG_PARSER_)/ast_etc.cpp.o $(OBJDIR_DEBUG_PARSER_)/lexer.cpp.o $(OBJDIR_DEBUG_PARSER_)/expression.cpp.o $(OBJDIR_DEBUG_PARSER_)/compiler.cpp.o $(OBJDIR_DEBUG_PARSER_)/builtinfunctions.cpp.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/vm.cpp.o $(OBJDIR_RELEASE)/utility.cpp.o $(OBJDIR_RELEASE)/type.cpp.o $(OBJDIR_RELEASE)/statement.cpp.o $(OBJDIR_RELEASE)/parser_actions.cpp.o $(OBJDIR_RELEASE)/parser.cpp.o $(OBJDIR_RELEASE)/main.cpp.o $(OBJDIR_RELEASE)/ast_etc.cpp.o $(OBJDIR_RELEASE)/lexer.cpp.o $(OBJDIR_RELEASE)/expression.cpp.o $(OBJDIR_RELEASE)/compiler.cpp.o $(OBJDIR_RELEASE)/builtinfunctions.cpp.o

OBJ_RELEASE_GLUT_ = $(OBJDIR_RELEASE_GLUT_)/vm.cpp.o $(OBJDIR_RELEASE_GLUT_)/utility.cpp.o $(OBJDIR_RELEASE_GLUT_)/type.cpp.o $(OBJDIR_RELEASE_GLUT_)/statement.cpp.o $(OBJDIR_RELEASE_GLUT_)/parser_actions.cpp.o $(OBJDIR_RELEASE_GLUT_)/parser.cpp.o $(OBJDIR_RELEASE_GLUT_)/main.cpp.o $(OBJDIR_RELEASE_GLUT_)/ast_etc.cpp.o $(OBJDIR_RELEASE_GLUT_)/lexer.cpp.o $(OBJDIR_RELEASE_GLUT_)/expression.cpp.o $(OBJDIR_RELEASE_GLUT_)/compiler.cpp.o $(OBJDIR_RELEASE_GLUT_)/builtinfunctions.cpp.o

all: debug debug_parser_ release release_glut_

clean: clean_debug clean_debug_parser_ clean_release clean_release_glut_

before_debug: 
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/vm.cpp.o: vm.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c vm.cpp -o $(OBJDIR_DEBUG)/vm.cpp.o

$(OBJDIR_DEBUG)/utility.cpp.o: utility.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c utility.cpp -o $(OBJDIR_DEBUG)/utility.cpp.o

$(OBJDIR_DEBUG)/type.cpp.o: type.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c type.cpp -o $(OBJDIR_DEBUG)/type.cpp.o

$(OBJDIR_DEBUG)/statement.cpp.o: statement.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c statement.cpp -o $(OBJDIR_DEBUG)/statement.cpp.o

$(OBJDIR_DEBUG)/parser_actions.cpp.o: parser_actions.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c parser_actions.cpp -o $(OBJDIR_DEBUG)/parser_actions.cpp.o

$(OBJDIR_DEBUG)/parser.cpp.o: parser.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c parser.cpp -o $(OBJDIR_DEBUG)/parser.cpp.o

$(OBJDIR_DEBUG)/main.cpp.o: main.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c main.cpp -o $(OBJDIR_DEBUG)/main.cpp.o

$(OBJDIR_DEBUG)/ast_etc.cpp.o: ast_etc.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ast_etc.cpp -o $(OBJDIR_DEBUG)/ast_etc.cpp.o

$(OBJDIR_DEBUG)/lexer.cpp.o: lexer.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c lexer.cpp -o $(OBJDIR_DEBUG)/lexer.cpp.o

$(OBJDIR_DEBUG)/expression.cpp.o: expression.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c expression.cpp -o $(OBJDIR_DEBUG)/expression.cpp.o

$(OBJDIR_DEBUG)/compiler.cpp.o: compiler.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c compiler.cpp -o $(OBJDIR_DEBUG)/compiler.cpp.o

$(OBJDIR_DEBUG)/builtinfunctions.cpp.o: builtinfunctions.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c builtinfunctions.cpp -o $(OBJDIR_DEBUG)/builtinfunctions.cpp.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf $(OBJDIR_DEBUG)

before_debug_parser_: 
	test -d $(OBJDIR_DEBUG_PARSER_) || mkdir -p $(OBJDIR_DEBUG_PARSER_)

after_debug_parser_: 

debug_parser_: before_debug_parser_ out_debug_parser_ after_debug_parser_

out_debug_parser_: before_debug_parser_ $(OBJ_DEBUG_PARSER_) $(DEP_DEBUG_PARSER_)
	$(LD) $(LIBDIR_DEBUG_PARSER_) -o $(OUT_DEBUG_PARSER_) $(OBJ_DEBUG_PARSER_)  $(LDFLAGS_DEBUG_PARSER_) $(LIB_DEBUG_PARSER_)

$(OBJDIR_DEBUG_PARSER_)/vm.cpp.o: vm.cpp
	$(CXX) $(CFLAGS_DEBUG_PARSER_) $(INC_DEBUG_PARSER_) -c vm.cpp -o $(OBJDIR_DEBUG_PARSER_)/vm.cpp.o

$(OBJDIR_DEBUG_PARSER_)/utility.cpp.o: utility.cpp
	$(CXX) $(CFLAGS_DEBUG_PARSER_) $(INC_DEBUG_PARSER_) -c utility.cpp -o $(OBJDIR_DEBUG_PARSER_)/utility.cpp.o

$(OBJDIR_DEBUG_PARSER_)/type.cpp.o: type.cpp
	$(CXX) $(CFLAGS_DEBUG_PARSER_) $(INC_DEBUG_PARSER_) -c type.cpp -o $(OBJDIR_DEBUG_PARSER_)/type.cpp.o

$(OBJDIR_DEBUG_PARSER_)/statement.cpp.o: statement.cpp
	$(CXX) $(CFLAGS_DEBUG_PARSER_) $(INC_DEBUG_PARSER_) -c statement.cpp -o $(OBJDIR_DEBUG_PARSER_)/statement.cpp.o

$(OBJDIR_DEBUG_PARSER_)/parser_actions.cpp.o: parser_actions.cpp
	$(CXX) $(CFLAGS_DEBUG_PARSER_) $(INC_DEBUG_PARSER_) -c parser_actions.cpp -o $(OBJDIR_DEBUG_PARSER_)/parser_actions.cpp.o

$(OBJDIR_DEBUG_PARSER_)/parser.cpp.o: parser.cpp
	$(CXX) $(CFLAGS_DEBUG_PARSER_) $(INC_DEBUG_PARSER_) -c parser.cpp -o $(OBJDIR_DEBUG_PARSER_)/parser.cpp.o

$(OBJDIR_DEBUG_PARSER_)/main.cpp.o: main.cpp
	$(CXX) $(CFLAGS_DEBUG_PARSER_) $(INC_DEBUG_PARSER_) -c main.cpp -o $(OBJDIR_DEBUG_PARSER_)/main.cpp.o

$(OBJDIR_DEBUG_PARSER_)/ast_etc.cpp.o: ast_etc.cpp
	$(CXX) $(CFLAGS_DEBUG_PARSER_) $(INC_DEBUG_PARSER_) -c ast_etc.cpp -o $(OBJDIR_DEBUG_PARSER_)/ast_etc.cpp.o

$(OBJDIR_DEBUG_PARSER_)/lexer.cpp.o: lexer.cpp
	$(CXX) $(CFLAGS_DEBUG_PARSER_) $(INC_DEBUG_PARSER_) -c lexer.cpp -o $(OBJDIR_DEBUG_PARSER_)/lexer.cpp.o

$(OBJDIR_DEBUG_PARSER_)/expression.cpp.o: expression.cpp
	$(CXX) $(CFLAGS_DEBUG_PARSER_) $(INC_DEBUG_PARSER_) -c expression.cpp -o $(OBJDIR_DEBUG_PARSER_)/expression.cpp.o

$(OBJDIR_DEBUG_PARSER_)/compiler.cpp.o: compiler.cpp
	$(CXX) $(CFLAGS_DEBUG_PARSER_) $(INC_DEBUG_PARSER_) -c compiler.cpp -o $(OBJDIR_DEBUG_PARSER_)/compiler.cpp.o

$(OBJDIR_DEBUG_PARSER_)/builtinfunctions.cpp.o: builtinfunctions.cpp
	$(CXX) $(CFLAGS_DEBUG_PARSER_) $(INC_DEBUG_PARSER_) -c builtinfunctions.cpp -o $(OBJDIR_DEBUG_PARSER_)/builtinfunctions.cpp.o

clean_debug_parser_: 
	rm -f $(OBJ_DEBUG_PARSER_) $(OUT_DEBUG_PARSER_)
	rm -rf $(OBJDIR_DEBUG_PARSER_)

before_release: 
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/vm.cpp.o: vm.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c vm.cpp -o $(OBJDIR_RELEASE)/vm.cpp.o

$(OBJDIR_RELEASE)/utility.cpp.o: utility.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c utility.cpp -o $(OBJDIR_RELEASE)/utility.cpp.o

$(OBJDIR_RELEASE)/type.cpp.o: type.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c type.cpp -o $(OBJDIR_RELEASE)/type.cpp.o

$(OBJDIR_RELEASE)/statement.cpp.o: statement.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c statement.cpp -o $(OBJDIR_RELEASE)/statement.cpp.o

$(OBJDIR_RELEASE)/parser_actions.cpp.o: parser_actions.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c parser_actions.cpp -o $(OBJDIR_RELEASE)/parser_actions.cpp.o

$(OBJDIR_RELEASE)/parser.cpp.o: parser.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c parser.cpp -o $(OBJDIR_RELEASE)/parser.cpp.o

$(OBJDIR_RELEASE)/main.cpp.o: main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.cpp -o $(OBJDIR_RELEASE)/main.cpp.o

$(OBJDIR_RELEASE)/ast_etc.cpp.o: ast_etc.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ast_etc.cpp -o $(OBJDIR_RELEASE)/ast_etc.cpp.o

$(OBJDIR_RELEASE)/lexer.cpp.o: lexer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c lexer.cpp -o $(OBJDIR_RELEASE)/lexer.cpp.o

$(OBJDIR_RELEASE)/expression.cpp.o: expression.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c expression.cpp -o $(OBJDIR_RELEASE)/expression.cpp.o

$(OBJDIR_RELEASE)/compiler.cpp.o: compiler.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c compiler.cpp -o $(OBJDIR_RELEASE)/compiler.cpp.o

$(OBJDIR_RELEASE)/builtinfunctions.cpp.o: builtinfunctions.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c builtinfunctions.cpp -o $(OBJDIR_RELEASE)/builtinfunctions.cpp.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf $(OBJDIR_RELEASE)

before_release_glut_: 
	test -d $(OBJDIR_RELEASE_GLUT_) || mkdir -p $(OBJDIR_RELEASE_GLUT_)

after_release_glut_: 

release_glut_: before_release_glut_ out_release_glut_ after_release_glut_

out_release_glut_: before_release_glut_ $(OBJ_RELEASE_GLUT_) $(DEP_RELEASE_GLUT_)
	$(LD) $(LIBDIR_RELEASE_GLUT_) -o $(OUT_RELEASE_GLUT_) $(OBJ_RELEASE_GLUT_)  $(LDFLAGS_RELEASE_GLUT_) $(LIB_RELEASE_GLUT_)

$(OBJDIR_RELEASE_GLUT_)/vm.cpp.o: vm.cpp
	$(CXX) $(CFLAGS_RELEASE_GLUT_) $(INC_RELEASE_GLUT_) -c vm.cpp -o $(OBJDIR_RELEASE_GLUT_)/vm.cpp.o

$(OBJDIR_RELEASE_GLUT_)/utility.cpp.o: utility.cpp
	$(CXX) $(CFLAGS_RELEASE_GLUT_) $(INC_RELEASE_GLUT_) -c utility.cpp -o $(OBJDIR_RELEASE_GLUT_)/utility.cpp.o

$(OBJDIR_RELEASE_GLUT_)/type.cpp.o: type.cpp
	$(CXX) $(CFLAGS_RELEASE_GLUT_) $(INC_RELEASE_GLUT_) -c type.cpp -o $(OBJDIR_RELEASE_GLUT_)/type.cpp.o

$(OBJDIR_RELEASE_GLUT_)/statement.cpp.o: statement.cpp
	$(CXX) $(CFLAGS_RELEASE_GLUT_) $(INC_RELEASE_GLUT_) -c statement.cpp -o $(OBJDIR_RELEASE_GLUT_)/statement.cpp.o

$(OBJDIR_RELEASE_GLUT_)/parser_actions.cpp.o: parser_actions.cpp
	$(CXX) $(CFLAGS_RELEASE_GLUT_) $(INC_RELEASE_GLUT_) -c parser_actions.cpp -o $(OBJDIR_RELEASE_GLUT_)/parser_actions.cpp.o

$(OBJDIR_RELEASE_GLUT_)/parser.cpp.o: parser.cpp
	$(CXX) $(CFLAGS_RELEASE_GLUT_) $(INC_RELEASE_GLUT_) -c parser.cpp -o $(OBJDIR_RELEASE_GLUT_)/parser.cpp.o

$(OBJDIR_RELEASE_GLUT_)/main.cpp.o: main.cpp
	$(CXX) $(CFLAGS_RELEASE_GLUT_) $(INC_RELEASE_GLUT_) -c main.cpp -o $(OBJDIR_RELEASE_GLUT_)/main.cpp.o

$(OBJDIR_RELEASE_GLUT_)/ast_etc.cpp.o: ast_etc.cpp
	$(CXX) $(CFLAGS_RELEASE_GLUT_) $(INC_RELEASE_GLUT_) -c ast_etc.cpp -o $(OBJDIR_RELEASE_GLUT_)/ast_etc.cpp.o

$(OBJDIR_RELEASE_GLUT_)/lexer.cpp.o: lexer.cpp
	$(CXX) $(CFLAGS_RELEASE_GLUT_) $(INC_RELEASE_GLUT_) -c lexer.cpp -o $(OBJDIR_RELEASE_GLUT_)/lexer.cpp.o

$(OBJDIR_RELEASE_GLUT_)/expression.cpp.o: expression.cpp
	$(CXX) $(CFLAGS_RELEASE_GLUT_) $(INC_RELEASE_GLUT_) -c expression.cpp -o $(OBJDIR_RELEASE_GLUT_)/expression.cpp.o

$(OBJDIR_RELEASE_GLUT_)/compiler.cpp.o: compiler.cpp
	$(CXX) $(CFLAGS_RELEASE_GLUT_) $(INC_RELEASE_GLUT_) -c compiler.cpp -o $(OBJDIR_RELEASE_GLUT_)/compiler.cpp.o

$(OBJDIR_RELEASE_GLUT_)/builtinfunctions.cpp.o: builtinfunctions.cpp
	$(CXX) $(CFLAGS_RELEASE_GLUT_) $(INC_RELEASE_GLUT_) -c builtinfunctions.cpp -o $(OBJDIR_RELEASE_GLUT_)/builtinfunctions.cpp.o

clean_release_glut_: 
	rm -f $(OBJ_RELEASE_GLUT_) $(OUT_RELEASE_GLUT_)
	rm -rf $(OBJDIR_RELEASE_GLUT_)

.PHONY: before_debug after_debug clean_debug before_debug_parser_ after_debug_parser_ clean_debug_parser_ before_release after_release clean_release before_release_glut_ after_release_glut_ clean_release_glut_

